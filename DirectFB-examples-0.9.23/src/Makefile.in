# Makefile.in generated by automake 1.7.9 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIR = @DATADIR@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIRECTFB_CFLAGS = @DIRECTFB_CFLAGS@
DIRECTFB_LIBS = @DIRECTFB_LIBS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_STRIP = @ac_ct_STRIP@
ac_pt_PKG_CONFIG = @ac_pt_PKG_CONFIG@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

SUBDIRS = df_knuckles df_neo spacedream

fontsdatadir = @DATADIR@/fonts

AM_CFLAGS = @DIRECTFB_CFLAGS@ -D_GNU_SOURCE

LIBADDS = \
	@DIRECTFB_LIBS@


AM_CPPFLAGS = \
	-DDATADIR=\"@DATADIR@\" \
	-DFONT=\"$(fontsdatadir)/decker.ttf\"


noinst_PROGRAMS = ve_test

ve_test_SOURCES = ve_test.c ve.c ve.h
ve_test_LDADD = $(LIBADDS) -lm

bin_PROGRAMS = \
	df_andi \
	df_bltload \
	df_drivertest \
	df_cpuload \
	df_databuffer \
	df_dok \
	df_fire \
	df_flip \
	df_fonts \
	df_input \
	df_joystick \
	df_layer \
	df_netload \
	df_dioload \
	df_palette \
	df_particle \
	df_porter \
	df_video \
	df_video_particle \
	df_stress \
	df_texture \
	df_window \
	pss


df_andi_SOURCES = df_andi.c 
df_andi_LDADD = $(LIBADDS)

df_drivertest_SOURCES = df_drivertest.c 
df_drivertest_LDADD = $(LIBADDS)

df_bltload_SOURCES = df_bltload.c 
df_bltload_LDADD = $(LIBADDS)

df_cpuload_SOURCES = df_cpuload.c 
df_cpuload_LDADD = $(LIBADDS)

df_databuffer_SOURCES = df_databuffer.c 
df_databuffer_LDADD = $(LIBADDS)

df_dok_SOURCES = df_dok.c pngtest3.h
df_dok_LDADD = $(LIBADDS)

df_fire_SOURCES = df_fire.c
df_fire_LDADD = $(LIBADDS)

df_flip_SOURCES = df_flip.c
df_flip_LDADD = $(LIBADDS)

df_fonts_SOURCES = df_fonts.c
df_fonts_LDADD = $(LIBADDS)

df_input_SOURCES = df_input.c
df_input_LDADD = $(LIBADDS)

df_joystick_SOURCES = df_joystick.c 
df_joystick_LDADD = $(LIBADDS) -lm

df_layer_SOURCES = df_layer.c
df_layer_LDADD = $(LIBADDS) -lm

df_netload_SOURCES = df_netload.c 
df_netload_LDADD = $(LIBADDS)

df_dioload_SOURCES = df_dioload.c 
df_dioload_LDADD = $(LIBADDS)

df_palette_SOURCES = df_palette.c
df_palette_LDADD = $(LIBADDS)

df_particle_SOURCES = df_particle.c 
df_particle_LDADD = $(LIBADDS) -lm

df_porter_SOURCES = df_porter.c 
df_porter_LDADD = $(LIBADDS)

df_stress_SOURCES = df_stress.c
df_stress_LDADD = $(LIBADDS)

df_texture_SOURCES = df_texture.c util.h ve.c ve.h
df_texture_LDADD = $(LIBADDS) -lm

df_video_SOURCES = df_video.c 
df_video_LDADD = $(LIBADDS) -lm

df_video_particle_SOURCES = df_video_particle.c 
df_video_particle_LDADD = $(LIBADDS) -lm

df_window_SOURCES = df_window.c 
df_window_LDADD = $(LIBADDS) -lm

pss_SOURCES = pss.c
pss_LDADD = $(LIBADDS) -lm
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
bin_PROGRAMS = df_andi$(EXEEXT) df_bltload$(EXEEXT) \
	df_drivertest$(EXEEXT) df_cpuload$(EXEEXT) \
	df_databuffer$(EXEEXT) df_dok$(EXEEXT) df_fire$(EXEEXT) \
	df_flip$(EXEEXT) df_fonts$(EXEEXT) df_input$(EXEEXT) \
	df_joystick$(EXEEXT) df_layer$(EXEEXT) df_netload$(EXEEXT) \
	df_dioload$(EXEEXT) df_palette$(EXEEXT) df_particle$(EXEEXT) \
	df_porter$(EXEEXT) df_video$(EXEEXT) df_video_particle$(EXEEXT) \
	df_stress$(EXEEXT) df_texture$(EXEEXT) df_window$(EXEEXT) \
	pss$(EXEEXT)
noinst_PROGRAMS = ve_test$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)

am_df_andi_OBJECTS = df_andi.$(OBJEXT)
df_andi_OBJECTS = $(am_df_andi_OBJECTS)
df_andi_DEPENDENCIES =
df_andi_LDFLAGS =
am_df_bltload_OBJECTS = df_bltload.$(OBJEXT)
df_bltload_OBJECTS = $(am_df_bltload_OBJECTS)
df_bltload_DEPENDENCIES =
df_bltload_LDFLAGS =
am_df_cpuload_OBJECTS = df_cpuload.$(OBJEXT)
df_cpuload_OBJECTS = $(am_df_cpuload_OBJECTS)
df_cpuload_DEPENDENCIES =
df_cpuload_LDFLAGS =
am_df_databuffer_OBJECTS = df_databuffer.$(OBJEXT)
df_databuffer_OBJECTS = $(am_df_databuffer_OBJECTS)
df_databuffer_DEPENDENCIES =
df_databuffer_LDFLAGS =
am_df_dioload_OBJECTS = df_dioload.$(OBJEXT)
df_dioload_OBJECTS = $(am_df_dioload_OBJECTS)
df_dioload_DEPENDENCIES =
df_dioload_LDFLAGS =
am_df_dok_OBJECTS = df_dok.$(OBJEXT)
df_dok_OBJECTS = $(am_df_dok_OBJECTS)
df_dok_DEPENDENCIES =
df_dok_LDFLAGS =
am_df_drivertest_OBJECTS = df_drivertest.$(OBJEXT)
df_drivertest_OBJECTS = $(am_df_drivertest_OBJECTS)
df_drivertest_DEPENDENCIES =
df_drivertest_LDFLAGS =
am_df_fire_OBJECTS = df_fire.$(OBJEXT)
df_fire_OBJECTS = $(am_df_fire_OBJECTS)
df_fire_DEPENDENCIES =
df_fire_LDFLAGS =
am_df_flip_OBJECTS = df_flip.$(OBJEXT)
df_flip_OBJECTS = $(am_df_flip_OBJECTS)
df_flip_DEPENDENCIES =
df_flip_LDFLAGS =
am_df_fonts_OBJECTS = df_fonts.$(OBJEXT)
df_fonts_OBJECTS = $(am_df_fonts_OBJECTS)
df_fonts_DEPENDENCIES =
df_fonts_LDFLAGS =
am_df_input_OBJECTS = df_input.$(OBJEXT)
df_input_OBJECTS = $(am_df_input_OBJECTS)
df_input_DEPENDENCIES =
df_input_LDFLAGS =
am_df_joystick_OBJECTS = df_joystick.$(OBJEXT)
df_joystick_OBJECTS = $(am_df_joystick_OBJECTS)
df_joystick_DEPENDENCIES =
df_joystick_LDFLAGS =
am_df_layer_OBJECTS = df_layer.$(OBJEXT)
df_layer_OBJECTS = $(am_df_layer_OBJECTS)
df_layer_DEPENDENCIES =
df_layer_LDFLAGS =
am_df_netload_OBJECTS = df_netload.$(OBJEXT)
df_netload_OBJECTS = $(am_df_netload_OBJECTS)
df_netload_DEPENDENCIES =
df_netload_LDFLAGS =
am_df_palette_OBJECTS = df_palette.$(OBJEXT)
df_palette_OBJECTS = $(am_df_palette_OBJECTS)
df_palette_DEPENDENCIES =
df_palette_LDFLAGS =
am_df_particle_OBJECTS = df_particle.$(OBJEXT)
df_particle_OBJECTS = $(am_df_particle_OBJECTS)
df_particle_DEPENDENCIES =
df_particle_LDFLAGS =
am_df_porter_OBJECTS = df_porter.$(OBJEXT)
df_porter_OBJECTS = $(am_df_porter_OBJECTS)
df_porter_DEPENDENCIES =
df_porter_LDFLAGS =
am_df_stress_OBJECTS = df_stress.$(OBJEXT)
df_stress_OBJECTS = $(am_df_stress_OBJECTS)
df_stress_DEPENDENCIES =
df_stress_LDFLAGS =
am_df_texture_OBJECTS = df_texture.$(OBJEXT) ve.$(OBJEXT)
df_texture_OBJECTS = $(am_df_texture_OBJECTS)
df_texture_DEPENDENCIES =
df_texture_LDFLAGS =
am_df_video_OBJECTS = df_video.$(OBJEXT)
df_video_OBJECTS = $(am_df_video_OBJECTS)
df_video_DEPENDENCIES =
df_video_LDFLAGS =
am_df_video_particle_OBJECTS = df_video_particle.$(OBJEXT)
df_video_particle_OBJECTS = $(am_df_video_particle_OBJECTS)
df_video_particle_DEPENDENCIES =
df_video_particle_LDFLAGS =
am_df_window_OBJECTS = df_window.$(OBJEXT)
df_window_OBJECTS = $(am_df_window_OBJECTS)
df_window_DEPENDENCIES =
df_window_LDFLAGS =
am_pss_OBJECTS = pss.$(OBJEXT)
pss_OBJECTS = $(am_pss_OBJECTS)
pss_DEPENDENCIES =
pss_LDFLAGS =
am_ve_test_OBJECTS = ve_test.$(OBJEXT) ve.$(OBJEXT)
ve_test_OBJECTS = $(am_ve_test_OBJECTS)
ve_test_DEPENDENCIES =
ve_test_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/df_andi.Po ./$(DEPDIR)/df_bltload.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_cpuload.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_databuffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_dioload.Po ./$(DEPDIR)/df_dok.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_drivertest.Po ./$(DEPDIR)/df_fire.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_flip.Po ./$(DEPDIR)/df_fonts.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_input.Po ./$(DEPDIR)/df_joystick.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_layer.Po ./$(DEPDIR)/df_netload.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_palette.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_particle.Po ./$(DEPDIR)/df_porter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_stress.Po ./$(DEPDIR)/df_texture.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_video.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_video_particle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/df_window.Po ./$(DEPDIR)/pss.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ve.Po ./$(DEPDIR)/ve_test.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(df_andi_SOURCES) $(df_bltload_SOURCES) \
	$(df_cpuload_SOURCES) $(df_databuffer_SOURCES) \
	$(df_dioload_SOURCES) $(df_dok_SOURCES) \
	$(df_drivertest_SOURCES) $(df_fire_SOURCES) $(df_flip_SOURCES) \
	$(df_fonts_SOURCES) $(df_input_SOURCES) $(df_joystick_SOURCES) \
	$(df_layer_SOURCES) $(df_netload_SOURCES) $(df_palette_SOURCES) \
	$(df_particle_SOURCES) $(df_porter_SOURCES) \
	$(df_stress_SOURCES) $(df_texture_SOURCES) $(df_video_SOURCES) \
	$(df_video_particle_SOURCES) $(df_window_SOURCES) \
	$(pss_SOURCES) $(ve_test_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(df_andi_SOURCES) $(df_bltload_SOURCES) $(df_cpuload_SOURCES) $(df_databuffer_SOURCES) $(df_dioload_SOURCES) $(df_dok_SOURCES) $(df_drivertest_SOURCES) $(df_fire_SOURCES) $(df_flip_SOURCES) $(df_fonts_SOURCES) $(df_input_SOURCES) $(df_joystick_SOURCES) $(df_layer_SOURCES) $(df_netload_SOURCES) $(df_palette_SOURCES) $(df_particle_SOURCES) $(df_porter_SOURCES) $(df_stress_SOURCES) $(df_texture_SOURCES) $(df_video_SOURCES) $(df_video_particle_SOURCES) $(df_window_SOURCES) $(pss_SOURCES) $(ve_test_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
df_andi$(EXEEXT): $(df_andi_OBJECTS) $(df_andi_DEPENDENCIES) 
	@rm -f df_andi$(EXEEXT)
	$(LINK) $(df_andi_LDFLAGS) $(df_andi_OBJECTS) $(df_andi_LDADD) $(LIBS)
df_bltload$(EXEEXT): $(df_bltload_OBJECTS) $(df_bltload_DEPENDENCIES) 
	@rm -f df_bltload$(EXEEXT)
	$(LINK) $(df_bltload_LDFLAGS) $(df_bltload_OBJECTS) $(df_bltload_LDADD) $(LIBS)
df_cpuload$(EXEEXT): $(df_cpuload_OBJECTS) $(df_cpuload_DEPENDENCIES) 
	@rm -f df_cpuload$(EXEEXT)
	$(LINK) $(df_cpuload_LDFLAGS) $(df_cpuload_OBJECTS) $(df_cpuload_LDADD) $(LIBS)
df_databuffer$(EXEEXT): $(df_databuffer_OBJECTS) $(df_databuffer_DEPENDENCIES) 
	@rm -f df_databuffer$(EXEEXT)
	$(LINK) $(df_databuffer_LDFLAGS) $(df_databuffer_OBJECTS) $(df_databuffer_LDADD) $(LIBS)
df_dioload$(EXEEXT): $(df_dioload_OBJECTS) $(df_dioload_DEPENDENCIES) 
	@rm -f df_dioload$(EXEEXT)
	$(LINK) $(df_dioload_LDFLAGS) $(df_dioload_OBJECTS) $(df_dioload_LDADD) $(LIBS)
df_dok$(EXEEXT): $(df_dok_OBJECTS) $(df_dok_DEPENDENCIES) 
	@rm -f df_dok$(EXEEXT)
	$(LINK) $(df_dok_LDFLAGS) $(df_dok_OBJECTS) $(df_dok_LDADD) $(LIBS)
df_drivertest$(EXEEXT): $(df_drivertest_OBJECTS) $(df_drivertest_DEPENDENCIES) 
	@rm -f df_drivertest$(EXEEXT)
	$(LINK) $(df_drivertest_LDFLAGS) $(df_drivertest_OBJECTS) $(df_drivertest_LDADD) $(LIBS)
df_fire$(EXEEXT): $(df_fire_OBJECTS) $(df_fire_DEPENDENCIES) 
	@rm -f df_fire$(EXEEXT)
	$(LINK) $(df_fire_LDFLAGS) $(df_fire_OBJECTS) $(df_fire_LDADD) $(LIBS)
df_flip$(EXEEXT): $(df_flip_OBJECTS) $(df_flip_DEPENDENCIES) 
	@rm -f df_flip$(EXEEXT)
	$(LINK) $(df_flip_LDFLAGS) $(df_flip_OBJECTS) $(df_flip_LDADD) $(LIBS)
df_fonts$(EXEEXT): $(df_fonts_OBJECTS) $(df_fonts_DEPENDENCIES) 
	@rm -f df_fonts$(EXEEXT)
	$(LINK) $(df_fonts_LDFLAGS) $(df_fonts_OBJECTS) $(df_fonts_LDADD) $(LIBS)
df_input$(EXEEXT): $(df_input_OBJECTS) $(df_input_DEPENDENCIES) 
	@rm -f df_input$(EXEEXT)
	$(LINK) $(df_input_LDFLAGS) $(df_input_OBJECTS) $(df_input_LDADD) $(LIBS)
df_joystick$(EXEEXT): $(df_joystick_OBJECTS) $(df_joystick_DEPENDENCIES) 
	@rm -f df_joystick$(EXEEXT)
	$(LINK) $(df_joystick_LDFLAGS) $(df_joystick_OBJECTS) $(df_joystick_LDADD) $(LIBS)
df_layer$(EXEEXT): $(df_layer_OBJECTS) $(df_layer_DEPENDENCIES) 
	@rm -f df_layer$(EXEEXT)
	$(LINK) $(df_layer_LDFLAGS) $(df_layer_OBJECTS) $(df_layer_LDADD) $(LIBS)
df_netload$(EXEEXT): $(df_netload_OBJECTS) $(df_netload_DEPENDENCIES) 
	@rm -f df_netload$(EXEEXT)
	$(LINK) $(df_netload_LDFLAGS) $(df_netload_OBJECTS) $(df_netload_LDADD) $(LIBS)
df_palette$(EXEEXT): $(df_palette_OBJECTS) $(df_palette_DEPENDENCIES) 
	@rm -f df_palette$(EXEEXT)
	$(LINK) $(df_palette_LDFLAGS) $(df_palette_OBJECTS) $(df_palette_LDADD) $(LIBS)
df_particle$(EXEEXT): $(df_particle_OBJECTS) $(df_particle_DEPENDENCIES) 
	@rm -f df_particle$(EXEEXT)
	$(LINK) $(df_particle_LDFLAGS) $(df_particle_OBJECTS) $(df_particle_LDADD) $(LIBS)
df_porter$(EXEEXT): $(df_porter_OBJECTS) $(df_porter_DEPENDENCIES) 
	@rm -f df_porter$(EXEEXT)
	$(LINK) $(df_porter_LDFLAGS) $(df_porter_OBJECTS) $(df_porter_LDADD) $(LIBS)
df_stress$(EXEEXT): $(df_stress_OBJECTS) $(df_stress_DEPENDENCIES) 
	@rm -f df_stress$(EXEEXT)
	$(LINK) $(df_stress_LDFLAGS) $(df_stress_OBJECTS) $(df_stress_LDADD) $(LIBS)
df_texture$(EXEEXT): $(df_texture_OBJECTS) $(df_texture_DEPENDENCIES) 
	@rm -f df_texture$(EXEEXT)
	$(LINK) $(df_texture_LDFLAGS) $(df_texture_OBJECTS) $(df_texture_LDADD) $(LIBS)
df_video$(EXEEXT): $(df_video_OBJECTS) $(df_video_DEPENDENCIES) 
	@rm -f df_video$(EXEEXT)
	$(LINK) $(df_video_LDFLAGS) $(df_video_OBJECTS) $(df_video_LDADD) $(LIBS)
df_video_particle$(EXEEXT): $(df_video_particle_OBJECTS) $(df_video_particle_DEPENDENCIES) 
	@rm -f df_video_particle$(EXEEXT)
	$(LINK) $(df_video_particle_LDFLAGS) $(df_video_particle_OBJECTS) $(df_video_particle_LDADD) $(LIBS)
df_window$(EXEEXT): $(df_window_OBJECTS) $(df_window_DEPENDENCIES) 
	@rm -f df_window$(EXEEXT)
	$(LINK) $(df_window_LDFLAGS) $(df_window_OBJECTS) $(df_window_LDADD) $(LIBS)
pss$(EXEEXT): $(pss_OBJECTS) $(pss_DEPENDENCIES) 
	@rm -f pss$(EXEEXT)
	$(LINK) $(pss_LDFLAGS) $(pss_OBJECTS) $(pss_LDADD) $(LIBS)
ve_test$(EXEEXT): $(ve_test_OBJECTS) $(ve_test_DEPENDENCIES) 
	@rm -f ve_test$(EXEEXT)
	$(LINK) $(ve_test_LDFLAGS) $(ve_test_OBJECTS) $(ve_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_andi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_bltload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_cpuload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_databuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_dioload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_dok.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_drivertest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_fire.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_flip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_fonts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_joystick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_layer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_netload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_palette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_particle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_porter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_stress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_texture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_video_particle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/df_window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ve_test.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-binPROGRAMS \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive install-man \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am \
	pdf-recursive ps ps-am ps-recursive tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
